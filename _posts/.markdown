---
layout: post
title:  "Administration Guide"
date:   2014-04-01 15:40:56
categories: page
---

The DHuS is a web application, running within a Java Virtual Machine. All its middleware components, such as database and application servers, run inside the JVM container.     

In order to allow integration into a hosting environment, the application needs to be installed and configured having well in mind what are the external interfaces to be used.    

The application needs to manage two flows:  
<ul type="square"> 
<li>**the incoming flow**: during the products ingestion process, the DHuS SW picks up products (compressed or not) from a folder and move them into another folder. We will call those folders,  respectively, inbox and incoming.
<li>**the outgoing flow** (how external users can search and download published data): this can happen using http (Tomcat) and, in particular cases, also ftp (service started by DHuS) on some dedicated service ports. 

</ul>   
figure 2     
 
The filesystems used by the application, can be two or more; 
<ul type="square">
<li> one filesystem is needed for storing the DB where the products are indexed, along with the logs and application binaries. This filesystem needs to reside on the local disks. 
<li> one or more filesystems are used for archiving the products. 
</ul>

Given the volume of normal Sentinels production, it is also recommended to use an external disk for mounting the second filesystem, in order to cope with several TBs of products.

<hr></hr>

**System Requirements**   
Hardware Requirements
The technical specifications of the DHuS are provided the following Table.

table    

**Network Requirements**    




**Software Requirements**



<hr> </hr>     

**Installation and Setup**    
Installation Manual   
To install the service:     
<ol>

<li>Create a user named dhus. Every step in the installation procedure, if not explicitly mentioned, shall be performed as dhus user.</li>
<li>Create the installation folder</li>
`mkdir p [installation-folder]`    
<li>Download the DHuS package (shar package) and save it into the installation folder  </li>         
<li>Change the permissions on the file.    </li>
`chmod +x dhus-XX.XX.XX.shar`   
<li>Launch    </li>
`./dhus-XX.XX.XX.shar`     
(the package will autoinstall).     
Once executed, the system setting configuration file can be accessed and updated.        
<li>Once the autoinstall procedure is complete, create the following directories for the local archive, the incoming products, the database etc..:   </li> 
`Local archive ?[install-dir]/data-local`          
`Var ?[install-dir]/var/`           
`Incoming ?[free_dir]/incoming`         
</ol>
Note that the incoming and the Local archive shall be two different folders (e.g. one cannot contain the other and vice versa) not necessarily under the DHuS installation folder. Moreover they shall be located in a partition of the machine where there is a certain amount of space (more details would be specified in Table 1), especially for the incoming folder (the data managed by DHuS will be located here). The graph in Figure 3 depicts the purpose of the directories in the DHuS archive. 


figure 3

<hr> </hr>
**Software Configuration Manual**

DHuS configuration files are contained in the etc folder created after the launch of the .shar installation package: 
 	
<ul type=square>
<li>  Start.sh  </li>
 <li>	dhus.xml </li>
 <li>	server.xml </li>
 <li>	log4j2.xml  </li>
</ul>

start.sh
<hr> </hr>
The start.sh script contains the single startup command for the DHuS. Optional parameters to setup are:     
`-XX:MaxPermSize=<nn> `     
Sets the size of the Permanent Generation area, where class files are kept. These are the result of compiled classes and jsp pages.     
`-Xms<nn> `     
Specifies the initial memory allocation pool for the Java Virtual Machine (JVM).     
For a machine with 16g memory available it is recommended to set <nn>=5g
For a machine with 32g memory available it is recommended to set <nn>=10g

`-Xmx<nn>   `    
Specifies the maximum memory allocation pool size for the Java Virtual Machine (JVM). 
For a machine with 16g memory available it is recommended to set <nn>=12g
For a machine with 32g memory available it is recommended to set <nn>=24g

`-XX:+UseConcMarkSweepGC -XX:+CMSIncrementalMode`         
Enable incremental Java Garbage Collection, distributing GC continuously during Java execution rather than periodically start heavier FullGC

`-Dhttp.proxyHost=<proxyHostIP> -Dhttp.proxyPort=<proxyHostPort>`     
In case DHuS node doesnt have access to Internet, this setting is needed to allow geo-locations searches into DHuS using an open proxy access
Optional configuration
The configuration of the following configuration items is not mandatory (some of them are not present in the default start.sh script and must be added manually).

`-DArchive.check=true|false`     
Force archive check at the start up (can also be scheduled in dhus.xml, see below): it checks the coherence between the products listed in the DHuS DB and the products physically stored in the DHuS rolling archive.
Default value: false
`-DArchive.forceReindex=true|false`     
Force a re-index of the DHuS DB and the Solr DB by using the products currently stored in the DHuS rolling archive. 
Default value: false


`-DArchive.forceReset=true|false`     
Resets Archive at DHuS start (DESTRUCTIVE: use with caution) 
Default value: false


`-DAction.record.inactive=true|false`    
This parameter is a java property which has been introduced to set up the statistics support to the DHuS (true enables the parameter, while false disable it.).

  `   -DArchive.incoming.relocate=false                     \`    
   `  -DArchive.incoming.relocate.path=/path/to/relocation  \`    

The following settings are necessary for DHuS application and the modification is not recommended:    
`-Duser.timezone=UTC`    
`-Dcom.sun.media.jai.disableMediaLib=true`   
`-Dsun.zip.disableMemoryMapping=true `    
`-cp "etc:lib/javax.servlet-api-3.0.1.jar:lib/*" fr.gael.dhus.DHuS `    



**Configuration doneand now?**   
Once you make sure that all the parameters are set correctly, allow start.sh script to be executable:     
`chmod ug+x start.sh`

dhus.xml
<hr></hr>     
The dhus.xml contents are organized in 7 groups and provides all comments needed to understand how to configure them. In the following table, a high level description of the groups is provided.


server.xml
<hr> </hr>     

The **server.xml** file contains the Apache Tomcat configuration settings. Additional settings could be included following the information provided in <a ref="https://tomcat.apache.org/tomcat-7.0-doc/config/http.html"> https://tomcat.apache.org/tomcat-7.0-doc/config/http.html </a> If not explicitly specified, the DHuS will set the server default values.    

Please note that:       
<Connector port="8080"     
indicates the http service port to setup: the default value is "8080"     

<Host name="localhost"     
This parameter indicates the server hostname.    

In the **APPENDIX A**, an example of a sever.xml file is provided.

Log4j2.xml
<hr> </hr>
    
The log4j2.xml contains the log settings. It is possible to raise or lower the log level as needed.
In the APPENDIX A, an example of a log4j2.xml file is provided.    
**User Interface Configuration Manual**        

The DHuS is currently equipped with two graphical user interfaces: GWT GUI and AJS GUI. This section deals with the configurability of the AJS GUI which allows a wide set of configuration actions which do not need a restart of DHuS to be applied.
Due to the growth of the different centres and related installations, a new configuration management module has been added into the AJS web app. It allows configuring various aspects of the GUI; mainly it is related to style, texts and layout:     
	<ol type=square>   
	<li>Title (shown in the header bar) </li>
	<li>Sections visibility (Cart, Profile, Sign In) </li> 
	<li>URL and texts of the link logos (shown in the header panel) </li>
	<li>Version text (shown in the info panel) </li>
	<li>Data Hub Logo (shown in the info panel) </li>
	<li>Mission Tag (shown in the Product List panel) </li>
	<li>Mission footprint style and color (shown in the Map panel) </li>
	<li>Advanced Search Mission specific fields (shown in Advanced Search Panel)</li> 
	<li>Map Layer (shown in the Map View)</li>
	</ol>
Please note that all the settings are included in the client side (2 text files), thus it is possible to change a parameter without restarting the DHuS, but just doing a refresh via browser.    


**How to change a parameter?**    
<hr> </hr>      
The files in charge of the GUI configuration management are located in:     
	`[DHUSDIR?]/var/tomcat/webapps/new/config `
They are:      
	`appconfig.json (includes 1,2,3,4,5) `     
	`styles.json (includes 6,7) `     

**Advanced Search Configuration **     
<hr> </hr> 
A special attention goes to the configuration of the advanced search mission specific fields. 
The configuration file appconfig.json has been updated in order to manage mission specific filters. 

A "missions" section has been added, containing an array with the following structure: 

"name": <label show for filter>, "indexname": 
<solr_metadata_index_name_identifying_filter>, "indexvalue":<solr_metadata_index_value_identifying_filter>, "filters":[filter_array] 

where [filter_array] is an array of mission-specific filters with the following structure: 

"indexname": <solr_metadata_index_name_identifying_filter> 
"indexlabel": <label show for filter> 
"regex": <regex_to_be_used_to_validate_the_filter_value_if_needed> 
[OPTIONAL] "indexvalues": <list_of_all_the_accepted_values> (if present it appears a combobox containing the list of all specified values, otherwise nothing appears. present 


Here below an example of filters configuration specific for S1 and S2 missions. 

 

`


 
 "missions":
    
      [

        {

            "name": "Mission: Sentinel-1",
            "indexname": "platformname",
            "indexvalue": "Sentinel-1",            
            "filters": [
                {

                    "indexname": "producttype",
                    "indexlabel": "Product Type (SLC,GRD,OCN)",
                    "indexvalues": "SLC|GRD|OCN",
                    "regex": ".*"
                },

                {
                    "indexname": "polarisationmode",
                    "indexlabel": "Polarisation (e.g.HH,VV,HV,VH,...)",
		    	"indexvalues": "HH|VV|HV|VH|HH+HV|VV+VH",
                    "regex": ".*"
                },

                {
                    "indexname": "sensoroperationalmode",
                    "indexlabel": "Sensor Mode (SM,IW,EW,WV)",
                    "indexvalues": "SM|IW|EW|WV",
                    "regex": ".*"

                },
                {
                    "indexname": "relativeorbitnumber",
                    "indexlabel": "Relative Orbit Number (from 1 to 175)",
		    "regex": "[1-9]|[1-9][0-9]|[1-9][0-7][0-5]"
		}
            ]
        },
        {
            "name": "Mission: Sentinel-2",
            "indexname": "platformname",
            "indexvalue": "Sentinel-2",
            "filters": [
                {
                    "indexname": "cloudcoverpercentage",
                    "indexlabel": "Cloud Cover % (e.g.[0 TO 9.4])"
                }
		]
        }
    ]
Once you have changed a value in the file, you only need to refresh your browser to see the change immediately applied. **No need to restart the DHuS**.


**Version Upgrade**
<hr></hr>     

Dependencies
This installation manual provides the upgrading DHuS version manual which means the installation of the reference version using a DB created during an installation of an older version of DHuS. The following instructions are ensured for all versions after the 0.4.3-1. (to be confirmed by AIV).
Here below the list of configuration changes present from 0.4.3-1 to 0.8.2. Unless explicitly mentioned, the version which includes the change in configuration parameter is reported in the including version column.    

table

**DHuS version updating manual**
<hr> </hr> 
Many aspects of DHuS first installation dont need to be repeated when upgrading application to a new release. In the following procedures the reference version will be called new_version and the older version, the version previously installed on the same instance, will be called old_version     
<ol>   
1.	Access to the chosen installation folder (/data is recommended) and create the installation directory:    
`mkdir dhus-<new_version>`    
(Its not necessary to touch the already present archive, the database is copied and then migrated at first start, so links to products remain intact and continue to point to the same archive)

2.	Create the new layout:     
`mkdir p dhus-<new_version>/logs`          
`mkdir p dhus-<new_version>/var`    

3.	Change the execution permissions
`chmod +x dhus-XX.XX.XX.shar`    

4.	Launch
`./dhus-XX.XX.XX.shar`    

5.	Access the installation directory and rename all the *.sh files (produced with the installation) as *.sh.orig executing the command:
rename .sh .sh.orig *.sh

6.	then access the /etc directory and rename all the *.xml files as *.xml.orig launching the same command as before:
`cd /etc`        
`rename .xml .xml.orig *.xml`    


7.	check that all the .xml and .sh files are correctly renamed respectively as .xml.orig and .sh.orig.

8.	copy all the .sh and all the .xml files, and synonyms.txt files from the folder of the previous version (please note that synonyms.txt is not present in versions older than the version 0.4.4):
`cp r dhus-<old_version>/*.sh dhus-<new_version>`   
`cp r dhus-<old_version>/etc/*.xml dhus-<new_version>/etc`    
`cp r dhus-<old_version>/etc/synonyms.txt dhus-<new_version>/etc`     

9.	Change the configuration files depending on the <old-version> number (see Table 3 for details on configuration files changes). Example of the updating configuration procedure from 0.4.3-1 to 0.8.2 version is provided below.     

10.	Check if an older DHuS version is running   
`ps edf | grep java`     
if in the list of active PID, one of them is reporting the text of the start.sh file and it is running under dhus user permission, it means that the older version of DHuS is running.

11.	If an older version of DHuS is running, stop it    
`dhus-<old_version>/stop.sh`    

12.	Copy the Database and SolR folder from the previous version
`cp -rp dhus-<old_version>/var/database dhus-<new_version>/var/`   
`cp -rp dhus-<old_version>/var/solr dhus-<new_version>/var/`    
`cp -rp dhus-<old_version>/var/tomcat dhus-<new_version>/var/`     

13.	Change the var path in the dhus.xml and check if every path containing &varFolder;/  path are still respected 
 ` <!ENTITY varFolder "dhus-<new_version>/var/">
]>`     
14.	Start the new DHuS version
`nohup /bin/bash start.sh &> dhus-<new_version>/logs/logs.txt &`       
</ol>
**Example of configuration changes updating DHuS from 0.4.3-1 version to 0.8.2 version**    

Start.sh configuration
<hr> </hr>
<ul type="square">
 	<li>Open dhus-<new_version>/start.sh.orig (that is the new one)
 	<li>Set the memory usage parameters according the own needs (the default values are Xms56g -Xmx56g)
 	<li>Change the properties removal into false (to allow collection of statistical information)
    ` -Daction.record.inactive=false                         \`
 	<Li>Save start.sh.orig and remane it as start.sh   
 `mv start.sh.orig start.sh`    
</ul>

Dhus.xml configuration
<hr></hr>

<ul type="square">

<li> 	Open dhus-<new_version>/etc/dhus.xml (that is the old one)     
<li>   Change the following lines:   
table
Original line	Changed line	Comments
<server protocol="http" host="localhost" port="8080">	<server>	
<ftp port="2121" ftps="false" />	<ftp port="2121" ftps="false" passivePort="30200-30220"  />	The passivePort parameter can be configured after the update of the version
<processing corePoolSize="4" maxPoolSize = "10" queueCapacity="10000" /> 	<processing corePoolSize="4" />	corePoolSize parameter shall be configured according the own needs

<li> Add the following line at the end of the system group (after tomcat path configuration): </li>          
  `executor enabled="false" batchModeEnabled="false"`
<li> Save dhus.xml    
</ul>

Server.xml configuration
<hr></hr>
<ul>
 <li>	Open dhus-<new_version>/etc/server.xml.orig (that is the new one- the old one does not exist in version 0.4.3-1)    
 	<li>Chech the configuration of tomcat parameters, especially the following line (in 0.4.3-1 version tose information were in the dhus.xml file)    
      <li> `<Connector port=    
>`</li> 
 	<li> Save server.xml.orig and remane it as server.xml    
`mv server.xml.orig server.xml` 
   </ul>
Starting and Stopping a DHuS Instance
<hr></hr>

**Start DHuS**    
Once the DHuS files are configured as shown in Software Configuration section, execute, as dhus user, the following command in the folder where the DHuS is installed:

`nohup /bin/bash start.sh &> [installation-dir]/logs.txt &`    

**Stop DHuS**

To stop DHuS, execute, as dhus user, the following command in the folder where the DHuS is installed:     
`/bin/bash stop.sh` 






